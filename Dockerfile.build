# Build Debian package using dh-virtualenv
#
# To create a package for Stretch in `dist/`, call:
#
#   ./build.sh debian:stretch

# Build arguments, as provided by 'build.sh'
ARG DIST_ID="debian"
ARG CODENAME="stretch"
ARG PKGNAME

# Other build arguments (adapt as needed)
ARG NODEREPO="node_8.x"
ARG DEB_POOL="http://ftp.nl.debian.org/debian/pool/main"

## Start package builder image for the chosen platform
FROM ${DIST_ID}:${CODENAME} AS dpkg-build

# Pass build args into image scope
ARG CODENAME
ARG PKGNAME
ARG NODEREPO
ARG DEB_POOL

# Install build tools and package build deps including nodejs
RUN env LANG=C apt-get update -qq -o Acquire::Languages=none \
    && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install \
        -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io \
        build-essential debhelper devscripts equivs apt-utils apt-transport-https \
        gnupg2 curl tar gzip lsb-release libparse-debianchangelog-perl \
        python3 python3-setuptools python3-pkg-resources python3-pip python3-dev \
        python-virtualenv libjs-sphinxdoc sphinx-rtd-theme-common \
        libffi-dev libxml2-dev libxslt1-dev libyaml-dev libjpeg-dev \
        libssl-dev libcurl4-openssl-dev libncurses5-dev libncursesw5-dev libzmq3-dev \
    && ( curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key \
         | env APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=true apt-key add - ) \
    && echo "deb https://deb.nodesource.com/${NODEREPO} ${CODENAME} main" \
            >/etc/apt/sources.list.d/nodesource.list \
    && apt-get update -qq -o Acquire::Languages=none \
    && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install \
        -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io nodejs \
    && apt-get clean && rm -rf "/var/lib/apt/lists"/*

# Uncomment and adapt these ENV instructions to use a local PyPI mirror
#ENV PIP_TRUSTED_HOST="artifactory.local"
#ENV PIP_INDEX_URL="https://${PIP_TRUSTED_HOST}/artifactory/api/pypi/pypi.python.org/simple"

# Install updated Python tooling and a current 'dh-virtualenv'
WORKDIR /dpkg-build
ADD "${DEB_POOL}/d/dh-virtualenv/dh-virtualenv_1.1-1_all.deb" ./
RUN dpkg -i --force-unsafe-io --ignore-depends=sphinx-rtd-theme-common *_all.deb \
    && python3 -m pip install -U pip \
    && python3 -m pip install -U virtualenv setuptools wheel

# Build project and show metadata of built package
COPY ./ ./
RUN python3 -m pip --version && dh_virtualenv --version \
    && sed -i -re "1s/(UNRELEASED|unstable|jessie|stretch|xenial|bionic)/$(lsb_release -cs)/g" debian/changelog \
    && dpkg-buildpackage -us -uc -b && mkdir -p /dpkg && cp -pl /${PKGNAME}[-_]* /dpkg \
    && dpkg-deb -I /dpkg/${PKGNAME}_*.deb
